#!/usr/bin/env bash

[ "$DEBUG" == "1" ] && set -x
set -eu -o pipefail -o posix

function show_usage {
    echo "Usage:"
    echo ""
    echo "    $0 [PATTERN [PATTERN]...]"
    echo ""
    echo "    PATTERN: Pattern compatible with the \`--filter=reference=<PATTERN>\` option from \`docker images\`"
    echo "             See https://docs.docker.com/engine/reference/commandline/images/#filtering"
    echo ""
}

SCRIPT_DIR=$(dirname $0)
HUB_BASE_URL=https://hub.docker.com
PATTERN=

while [ "$#" -gt "0" ]; do
    case "$1" in
        -h|--help) show_usage ; exit ;;
        *) PATTERN="$PATTERN --filter=reference=$1" ; shift ;;
     esac
done

for image in $(docker images --format="{{.Repository}}:{{.Tag}}:{{.ID}}" --filter 'dangling=false' $PATTERN); do
    repository="$(echo $image | cut -d':' -f1)"
    tag="$(echo $image | cut -d':' -f2)"
    local_image_id="$(echo $image | cut -d':' -f3)"

    set +e
    hub_image_id=$(${SCRIPT_DIR}/docker-hub-image-id $repository $tag)
    set -e

    if [ "$local_image_id" == "$hub_image_id" ]; then
        result="\033[0;32m✓\033[0m"
    else
        result="\033[0;31m✕\033[0m"
    fi

    if [ "$(echo "$repository" | grep --count '/')" == "0" ]; then
        url_path_prefix="_"
    else
        url_path_prefix="r"
    fi

    hub_url="$HUB_BASE_URL/$url_path_prefix/$repository"

    if [ -z "$hub_image_id" ]; then
        echo -e "$result Error while checking $repository:$tag ($hub_url) | local: ($local_image_id)"
    else
        echo -e "$result $repository:$tag | local: $local_image_id | hub: $hub_image_id ($hub_url)"
    fi
done
